latent_mean <- apply(interpolation_array_list[[pair]][[cur_win]],1,mean)
lambda_mix_vec <- mmppIntensityNumeric(params=param_mean,
latent.vec=latent_mean)
Lambda_vec <- rep(0,length(current_event_time)+1)
temp_time_vec <- c(0,current_event_time,current_obs_time)
for(m in 1:(length(current_event_time)+1)){
interevent_idx <- (time_segment>=temp_time_vec[m]) & (time_segment<temp_time_vec[m+1])
Lambda_vec[m] <- sum(lambda_mix_vec[interevent_idx])*(time_segment[2]-time_segment[1])
}
all_Lambda <- c(all_Lambda,Lambda_vec)
}
# if(length(current_window_vec)<max(unique_observe_win$observe.id)){
#   non_observe_wins <- unique_observe_win$observe.time[!c(1:max(unique_observe_win$observe.id))%in%current_window_vec]
#   all_Lambda <- c(all_Lambda,(param_mean$lambda0*(1+param_mean$c))*non_observe_wins)
# }
KS.result.stat.mmpp[l] <-ks.test(all_Lambda,"pexp")$statistic
}
#load("../output/ks_all_models.RData")
png(paste(plot_path,"real_compare_ks.png",sep=""), height=600, width=600)
par(mfrow=c(1,1),tcl=0.2,mgp=c(3,0,0),
mar=c(5,5,2.6,0.8), oma=c(0,0,0,0))
plot(0,0,xlim=c(6,max(x.ks)),ylim=c(0,1),xlab="Number of events",ylab="KS statistics",cex.lab=2.2,type="n",xaxt="n",yaxt="n")
title("(d)",line=0.7,cex.main=2)
mgp.axis(1,mgp=c(0,0.6,0),at=seq(0,100,20),cex.axis=2,lwd=0,lwd.ticks=1)
mgp.axis(2,mgp=c(0,0.1,0),at=seq(0,0.6,0.1),cex.axis=2,lwd=0,lwd.ticks=1)
ks.line.mmhp <- loess(KS.result.stat.mmhp~x.ks)
ks.line.mmhpsd <- loess(KS.result.stat.mmhpsd~x.ks)
ks.line.mmpp <- loess(KS.result.stat.mmpp~x.ks)
ks.line.hawkes <- loess(KS.result.stat.hawkes~x.ks)
ks.line.quantile <- loess(ks_quantile_y~ks_quantile_x)
new.ks <- data.frame(x.ks = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks.q <- data.frame(ks_quantile_x = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks$mmhp.pred <- predict(ks.line.mmhp, newdata=new.ks)
new.ks$mmhpsd.pred <- predict(ks.line.mmhpsd, newdata=new.ks)
new.ks$mmpp.pred <- predict(ks.line.mmpp, newdata=new.ks)
new.ks$hawkes.pred <- predict(ks.line.hawkes, newdata=new.ks)
new.ks$quantile <- predict(ks.line.quantile, newdata=new.ks.q)
with(new.ks,lines(x=x.ks,y=mmhp.pred,col="#FC4E07",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmhpsd.pred,col="darkviolet",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmpp.pred,col="#00AFBB",lwd=4))
with(new.ks,lines(x=x.ks,y=hawkes.pred,col="#E7B800",lwd=4))
abline(h=unique(KS.result.stat.pp),col="#2d8d39",lwd=4)
with(new.ks,lines(x=x.ks,y=quantile,col="grey",lwd=4))
legend(46,0.6,c("MMHP","MMHPSD","MMPP","Hawkes","Poisson process","Critical value"),lty=1,lwd=5,
col=c("#FC4E07","darkviolet","#00AFBB","#E7B800","#2d8d39","grey"),bty="n",cex=2.2)
dev.off()
?loess
#load("../output/ks_all_models.RData")
png(paste(plot_path,"real_compare_ks.png",sep=""), height=600, width=600)
par(mfrow=c(1,1),tcl=0.2,mgp=c(3,0,0),
mar=c(5,5,2.6,0.8), oma=c(0,0,0,0))
plot(0,0,xlim=c(6,max(x.ks)),ylim=c(0,1),xlab="Number of events",ylab="KS statistics",cex.lab=2.2,type="n",xaxt="n",yaxt="n")
title("(d)",line=0.7,cex.main=2)
mgp.axis(1,mgp=c(0,0.6,0),at=seq(0,100,20),cex.axis=2,lwd=0,lwd.ticks=1)
mgp.axis(2,mgp=c(0,0.1,0),at=seq(0,0.6,0.1),cex.axis=2,lwd=0,lwd.ticks=1)
ks.line.mmhp <- loess(KS.result.stat.mmhp~x.ks)
ks.line.mmhpsd <- loess(KS.result.stat.mmhpsd~x.ks)
ks.line.mmpp <- loess(KS.result.stat.mmpp~x.ks)
ks.line.hawkes <- loess(KS.result.stat.hawkes~x.ks)
ks.line.quantile <- loess(ks_quantile_y~ks_quantile_x,span=10)
new.ks <- data.frame(x.ks = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks.q <- data.frame(ks_quantile_x = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks$mmhp.pred <- predict(ks.line.mmhp, newdata=new.ks)
new.ks$mmhpsd.pred <- predict(ks.line.mmhpsd, newdata=new.ks)
new.ks$mmpp.pred <- predict(ks.line.mmpp, newdata=new.ks)
new.ks$hawkes.pred <- predict(ks.line.hawkes, newdata=new.ks)
new.ks$quantile <- predict(ks.line.quantile, newdata=new.ks.q)
with(new.ks,lines(x=x.ks,y=mmhp.pred,col="#FC4E07",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmhpsd.pred,col="darkviolet",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmpp.pred,col="#00AFBB",lwd=4))
with(new.ks,lines(x=x.ks,y=hawkes.pred,col="#E7B800",lwd=4))
abline(h=unique(KS.result.stat.pp),col="#2d8d39",lwd=4)
with(new.ks,lines(x=x.ks,y=quantile,col="grey",lwd=4))
legend(46,0.6,c("MMHP","MMHPSD","MMPP","Hawkes","Poisson process","Critical value"),lty=1,lwd=5,
col=c("#FC4E07","darkviolet","#00AFBB","#E7B800","#2d8d39","grey"),bty="n",cex=2.2)
dev.off()
#load("../output/ks_all_models.RData")
png(paste(plot_path,"real_compare_ks.png",sep=""), height=600, width=600)
par(mfrow=c(1,1),tcl=0.2,mgp=c(3,0,0),
mar=c(5,5,2.6,0.8), oma=c(0,0,0,0))
plot(0,0,xlim=c(6,max(x.ks)),ylim=c(0,1),xlab="Number of events",ylab="KS statistics",cex.lab=2.2,type="n",xaxt="n",yaxt="n")
title("(d)",line=0.7,cex.main=2)
mgp.axis(1,mgp=c(0,0.6,0),at=seq(0,100,20),cex.axis=2,lwd=0,lwd.ticks=1)
mgp.axis(2,mgp=c(0,0.1,0),at=seq(0,0.6,0.1),cex.axis=2,lwd=0,lwd.ticks=1)
ks.line.mmhp <- loess(KS.result.stat.mmhp~x.ks)
ks.line.mmhpsd <- loess(KS.result.stat.mmhpsd~x.ks)
ks.line.mmpp <- loess(KS.result.stat.mmpp~x.ks)
ks.line.hawkes <- loess(KS.result.stat.hawkes~x.ks)
ks.line.quantile <- loess(ks_quantile_y~ks_quantile_x,span=1)
new.ks <- data.frame(x.ks = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks.q <- data.frame(ks_quantile_x = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks$mmhp.pred <- predict(ks.line.mmhp, newdata=new.ks)
new.ks$mmhpsd.pred <- predict(ks.line.mmhpsd, newdata=new.ks)
new.ks$mmpp.pred <- predict(ks.line.mmpp, newdata=new.ks)
new.ks$hawkes.pred <- predict(ks.line.hawkes, newdata=new.ks)
new.ks$quantile <- predict(ks.line.quantile, newdata=new.ks.q)
with(new.ks,lines(x=x.ks,y=mmhp.pred,col="#FC4E07",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmhpsd.pred,col="darkviolet",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmpp.pred,col="#00AFBB",lwd=4))
with(new.ks,lines(x=x.ks,y=hawkes.pred,col="#E7B800",lwd=4))
abline(h=unique(KS.result.stat.pp),col="#2d8d39",lwd=4)
with(new.ks,lines(x=x.ks,y=quantile,col="grey",lwd=4))
legend(46,0.6,c("MMHP","MMHPSD","MMPP","Hawkes","Poisson process","Critical value"),lty=1,lwd=5,
col=c("#FC4E07","darkviolet","#00AFBB","#E7B800","#2d8d39","grey"),bty="n",cex=2.2)
dev.off()
#load("../output/ks_all_models.RData")
png(paste(plot_path,"real_compare_ks.png",sep=""), height=600, width=600)
par(mfrow=c(1,1),tcl=0.2,mgp=c(3,0,0),
mar=c(5,5,2.6,0.8), oma=c(0,0,0,0))
plot(0,0,xlim=c(6,max(x.ks)),ylim=c(0,1),xlab="Number of events",ylab="KS statistics",cex.lab=2.2,type="n",xaxt="n",yaxt="n")
title("(d)",line=0.7,cex.main=2)
mgp.axis(1,mgp=c(0,0.6,0),at=seq(0,100,20),cex.axis=2,lwd=0,lwd.ticks=1)
mgp.axis(2,mgp=c(0,0.1,0),at=seq(0,0.6,0.1),cex.axis=2,lwd=0,lwd.ticks=1)
ks.line.mmhp <- loess(KS.result.stat.mmhp~x.ks)
ks.line.mmhpsd <- loess(KS.result.stat.mmhpsd~x.ks)
ks.line.mmpp <- loess(KS.result.stat.mmpp~x.ks)
ks.line.hawkes <- loess(KS.result.stat.hawkes~x.ks)
ks.line.quantile <- loess(ks_quantile_y~ks_quantile_x,span=5)
new.ks <- data.frame(x.ks = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks.q <- data.frame(ks_quantile_x = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks$mmhp.pred <- predict(ks.line.mmhp, newdata=new.ks)
new.ks$mmhpsd.pred <- predict(ks.line.mmhpsd, newdata=new.ks)
new.ks$mmpp.pred <- predict(ks.line.mmpp, newdata=new.ks)
new.ks$hawkes.pred <- predict(ks.line.hawkes, newdata=new.ks)
new.ks$quantile <- predict(ks.line.quantile, newdata=new.ks.q)
with(new.ks,lines(x=x.ks,y=mmhp.pred,col="#FC4E07",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmhpsd.pred,col="darkviolet",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmpp.pred,col="#00AFBB",lwd=4))
with(new.ks,lines(x=x.ks,y=hawkes.pred,col="#E7B800",lwd=4))
abline(h=unique(KS.result.stat.pp),col="#2d8d39",lwd=4)
with(new.ks,lines(x=x.ks,y=quantile,col="grey",lwd=4))
legend(46,0.6,c("MMHP","MMHPSD","MMPP","Hawkes","Poisson process","Critical value"),lty=1,lwd=5,
col=c("#FC4E07","darkviolet","#00AFBB","#E7B800","#2d8d39","grey"),bty="n",cex=2.2)
dev.off()
#load("../output/ks_all_models.RData")
png(paste(plot_path,"real_compare_ks.png",sep=""), height=600, width=600)
par(mfrow=c(1,1),tcl=0.2,mgp=c(3,0,0),
mar=c(5,5,2.6,0.8), oma=c(0,0,0,0))
plot(0,0,xlim=c(6,max(x.ks)),ylim=c(0,1),xlab="Number of events",ylab="KS statistics",cex.lab=2.2,type="n",xaxt="n",yaxt="n")
title("(d)",line=0.7,cex.main=2)
mgp.axis(1,mgp=c(0,0.6,0),at=seq(0,100,20),cex.axis=2,lwd=0,lwd.ticks=1)
mgp.axis(2,mgp=c(0,0.1,0),at=seq(0,0.6,0.1),cex.axis=2,lwd=0,lwd.ticks=1)
ks.line.mmhp <- loess(KS.result.stat.mmhp~x.ks)
ks.line.mmhpsd <- loess(KS.result.stat.mmhpsd~x.ks)
ks.line.mmpp <- loess(KS.result.stat.mmpp~x.ks)
ks.line.hawkes <- loess(KS.result.stat.hawkes~x.ks)
ks.line.quantile <- loess(ks_quantile_y~ks_quantile_x,span=2)
new.ks <- data.frame(x.ks = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks.q <- data.frame(ks_quantile_x = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks$mmhp.pred <- predict(ks.line.mmhp, newdata=new.ks)
new.ks$mmhpsd.pred <- predict(ks.line.mmhpsd, newdata=new.ks)
new.ks$mmpp.pred <- predict(ks.line.mmpp, newdata=new.ks)
new.ks$hawkes.pred <- predict(ks.line.hawkes, newdata=new.ks)
new.ks$quantile <- predict(ks.line.quantile, newdata=new.ks.q)
with(new.ks,lines(x=x.ks,y=mmhp.pred,col="#FC4E07",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmhpsd.pred,col="darkviolet",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmpp.pred,col="#00AFBB",lwd=4))
with(new.ks,lines(x=x.ks,y=hawkes.pred,col="#E7B800",lwd=4))
abline(h=unique(KS.result.stat.pp),col="#2d8d39",lwd=4)
with(new.ks,lines(x=x.ks,y=quantile,col="grey",lwd=4))
legend(46,0.6,c("MMHP","MMHPSD","MMPP","Hawkes","Poisson process","Critical value"),lty=1,lwd=5,
col=c("#FC4E07","darkviolet","#00AFBB","#E7B800","#2d8d39","grey"),bty="n",cex=2.2)
dev.off()
ks_quantile_x <- c(1:20,seq(25,50,5),seq(55,125,5))
ks_quantile_y <- c(0.975,0.842,0.708,0.624,0.565,0.521,0.486,0.457,0.432,0.410,0.391,0.375,0.361,0.349,0.338,
0.328,0.318,0.309,0.301,0.294,0.270,0.240,0.230,0.210,0.2,0.19,1.36/sqrt(seq(55,125,5)))
#load("../output/ks_all_models.RData")
png(paste(plot_path,"real_compare_ks.png",sep=""), height=600, width=600)
par(mfrow=c(1,1),tcl=0.2,mgp=c(3,0,0),
mar=c(5,5,2.6,0.8), oma=c(0,0,0,0))
plot(0,0,xlim=c(6,max(x.ks)),ylim=c(0,1),xlab="Number of events",ylab="KS statistics",cex.lab=2.2,type="n",xaxt="n",yaxt="n")
title("(d)",line=0.7,cex.main=2)
mgp.axis(1,mgp=c(0,0.6,0),at=seq(0,100,20),cex.axis=2,lwd=0,lwd.ticks=1)
mgp.axis(2,mgp=c(0,0.1,0),at=seq(0,0.6,0.1),cex.axis=2,lwd=0,lwd.ticks=1)
ks.line.mmhp <- loess(KS.result.stat.mmhp~x.ks)
ks.line.mmhpsd <- loess(KS.result.stat.mmhpsd~x.ks)
ks.line.mmpp <- loess(KS.result.stat.mmpp~x.ks)
ks.line.hawkes <- loess(KS.result.stat.hawkes~x.ks)
ks.line.quantile <- loess(ks_quantile_y~ks_quantile_x,span=2)
new.ks <- data.frame(x.ks = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks.q <- data.frame(ks_quantile_x = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks$mmhp.pred <- predict(ks.line.mmhp, newdata=new.ks)
new.ks$mmhpsd.pred <- predict(ks.line.mmhpsd, newdata=new.ks)
new.ks$mmpp.pred <- predict(ks.line.mmpp, newdata=new.ks)
new.ks$hawkes.pred <- predict(ks.line.hawkes, newdata=new.ks)
new.ks$quantile <- predict(ks.line.quantile, newdata=new.ks.q)
with(new.ks,lines(x=x.ks,y=mmhp.pred,col="#FC4E07",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmhpsd.pred,col="darkviolet",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmpp.pred,col="#00AFBB",lwd=4))
with(new.ks,lines(x=x.ks,y=hawkes.pred,col="#E7B800",lwd=4))
abline(h=unique(KS.result.stat.pp),col="#2d8d39",lwd=4)
with(new.ks,lines(x=x.ks,y=quantile,col="grey",lwd=4))
legend(46,0.6,c("MMHP","MMHPSD","MMPP","Hawkes","Poisson process","Critical value"),lty=1,lwd=5,
col=c("#FC4E07","darkviolet","#00AFBB","#E7B800","#2d8d39","grey"),bty="n",cex=2.2)
dev.off()
ks_quantile_x <- c(1:20,seq(25,50,5),seq(55,130,5))
ks_quantile_y <- c(0.975,0.842,0.708,0.624,0.565,0.521,0.486,0.457,0.432,0.410,0.391,0.375,0.361,0.349,0.338,
0.328,0.318,0.309,0.301,0.294,0.270,0.240,0.230,0.210,0.2,0.19,1.36/sqrt(seq(55,130,5)))
#load("../output/ks_all_models.RData")
png(paste(plot_path,"real_compare_ks.png",sep=""), height=600, width=600)
par(mfrow=c(1,1),tcl=0.2,mgp=c(3,0,0),
mar=c(5,5,2.6,0.8), oma=c(0,0,0,0))
plot(0,0,xlim=c(6,max(x.ks)),ylim=c(0,1),xlab="Number of events",ylab="KS statistics",cex.lab=2.2,type="n",xaxt="n",yaxt="n")
title("(d)",line=0.7,cex.main=2)
mgp.axis(1,mgp=c(0,0.6,0),at=seq(0,100,20),cex.axis=2,lwd=0,lwd.ticks=1)
mgp.axis(2,mgp=c(0,0.1,0),at=seq(0,0.6,0.1),cex.axis=2,lwd=0,lwd.ticks=1)
ks.line.mmhp <- loess(KS.result.stat.mmhp~x.ks)
ks.line.mmhpsd <- loess(KS.result.stat.mmhpsd~x.ks)
ks.line.mmpp <- loess(KS.result.stat.mmpp~x.ks)
ks.line.hawkes <- loess(KS.result.stat.hawkes~x.ks)
ks.line.quantile <- loess(ks_quantile_y~ks_quantile_x,span=2)
new.ks <- data.frame(x.ks = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks.q <- data.frame(ks_quantile_x = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks$mmhp.pred <- predict(ks.line.mmhp, newdata=new.ks)
new.ks$mmhpsd.pred <- predict(ks.line.mmhpsd, newdata=new.ks)
new.ks$mmpp.pred <- predict(ks.line.mmpp, newdata=new.ks)
new.ks$hawkes.pred <- predict(ks.line.hawkes, newdata=new.ks)
new.ks$quantile <- predict(ks.line.quantile, newdata=new.ks.q)
with(new.ks,lines(x=x.ks,y=mmhp.pred,col="#FC4E07",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmhpsd.pred,col="darkviolet",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmpp.pred,col="#00AFBB",lwd=4))
with(new.ks,lines(x=x.ks,y=hawkes.pred,col="#E7B800",lwd=4))
abline(h=unique(KS.result.stat.pp),col="#2d8d39",lwd=4)
with(new.ks,lines(x=x.ks,y=quantile,col="grey",lwd=4))
legend(46,0.6,c("MMHP","MMHPSD","MMPP","Hawkes","Poisson process","Critical value"),lty=1,lwd=5,
col=c("#FC4E07","darkviolet","#00AFBB","#E7B800","#2d8d39","grey"),bty="n",cex=2.2)
dev.off()
max(x.ks)
current_cohort <- 5
clean_data <- cleanData(full_data[[cohort_names[current_cohort]]])
return_df <- cleanObservationPeriod(current_cohort, clean_data)
unique_pairs_df <- return_df %>% group_by(initiator, recipient) %>%
dplyr::summarize(count=n(),
observe=list(observe.id),
observe.length=list(observe.time),
no.events=list(no.events))
unique_observe_win <- unique(return_df[,c("observe.id","observe.time")])
x.ks <- rep(NA,nrow(unique_pairs_df))
##KS statistics for mmhp
load(paste(data_path,cohort_names[current_cohort],
"/sep_mmhp_stan_result_",cohort_names[current_cohort],
".RData",sep=''))
load(paste(data_path,cohort_names[current_cohort],
"/mmhp_est_zt_",cohort_names[current_cohort],".RData",sep=''))
KS.result.stat.mmhp <- rep(NA,nrow(unique_pairs_df))
for(l in 1:nrow(unique_pairs_df)){
i <- unique_pairs_df$initiator[l]
j <- unique_pairs_df$recipient[l]
pair <- which(unique_pairs_df$initiator==i&unique_pairs_df$recipient==j)
param_mean <- list(lambda0=mean(sim_mmhp_sep$lambda0[,pair]),
lambda1=mean(sim_mmhp_sep$lambda1[,pair]),
alpha=mean(sim_mmhp_sep$alpha[,pair]),
beta=mean(sim_mmhp_sep$beta[,pair]),
q1=mean(sim_mmhp_sep$q1[,pair]),
q2=mean(sim_mmhp_sep$q2[,pair]))
param_delta_1 <- mean(sim_mmhp_sep$delta_1[,pair])
current_window_vec <- unique_pairs_df$observe[[pair]]
current_count_win <- unique_pairs_df$no.events[[pair]]
all_Lambda <- numeric(0)
x.ks[l] <- 0
## add non observation period
for(cur in c(1:length(current_window_vec))){ ## check length > 2
cur_win <- current_window_vec[cur]
current_event_time <- return_df[return_df$initiator==i&
return_df$recipient==j&
return_df$observe.id==cur_win,"event.times"][[1]]
current_obs_time <- return_df[return_df$initiator==i&
return_df$recipient==j&
return_df$observe.id==cur_win,"observe.time"]
x.ks[l] <- x.ks[l]+length(current_event_time)
time_segment <- seq(0,current_obs_time,length.out=no_segments)
latent_mean <- apply(interpolation_array_list[[pair]][[cur_win]],1,mean)
lambda_mix_vec <- mmhpIntensityNumeric(params=param_mean,
t=current_event_time,
time.vec=time_segment,
latent.vec=latent_mean)
Lambda_vec <- rep(0,length(current_event_time)+1)
temp_time_vec <- c(0,current_event_time,current_obs_time)
for(m in 1:(length(current_event_time)+1)){
interevent_idx <- (time_segment>=temp_time_vec[m]) & (time_segment<temp_time_vec[m+1])
Lambda_vec[m] <- sum(lambda_mix_vec[interevent_idx])*(time_segment[2]-time_segment[1])
}
all_Lambda <- c(all_Lambda,Lambda_vec)
}
if(length(current_window_vec)<max(unique_observe_win$observe.id)){
non_observe_wins <- unique_observe_win$observe.time[!c(1:max(unique_observe_win$observe.id))%in%current_window_vec]
all_Lambda <- c(all_Lambda,(param_mean$lambda0*(1-param_delta_1)+param_mean$lambda1*param_delta_1)*non_observe_wins)
}
KS.result.stat.mmhp[l] <-ks.test(all_Lambda,"pexp",rate=1/mean(all_Lambda))$statistic
}
##KS statistics for mmhpsd
load(paste(data_path,cohort_names[current_cohort],"/sep_mmhpsd_result_",cohort_names[current_cohort],
".RData",sep=''))
KS.result.stat.mmhpsd <- rep(NA,nrow(unique_pairs_df))
for(l in 1:nrow(unique_pairs_df)){
i <- unique_pairs_df$initiator[l]
j <- unique_pairs_df$recipient[l]
pair <- which(unique_pairs_df$initiator==i&unique_pairs_df$recipient==j)
current_window_vec <- unique_pairs_df$observe[[pair]]
all_Lambda <- numeric(0)
for(cur in c(1:length(current_window_vec))){ ## check length > 2
cur_win <- current_window_vec[cur]
cur_row <- which(return_df$initiator==i&return_df$recipient==j&return_df$observe.id==cur_win)
current_event_time <- return_df[cur_row,"event.times"][[1]]
all_Lambda <- c(all_Lambda, event_lambda_estimation[[cur_row]]*diff(c(0,current_event_time))/2)
}
KS.result.stat.mmhpsd[l] <-ks.test(all_Lambda,"pexp")$statistic
}
##KS statistics for mmpp
load(paste(data_path,cohort_names[current_cohort],"/sep_mmpp_stan_result_",cohort_names[current_cohort],
".RData",sep=''))
load(paste(data_path,cohort_names[current_cohort],
"/mmpp_state_est_",cohort_names[current_cohort],
".RData",sep=''))
KS.result.stat.mmpp <- rep(NA,nrow(unique_pairs_df))
for(l in 1:nrow(unique_pairs_df)){
i <- unique_pairs_df$initiator[l]
j <- unique_pairs_df$recipient[l]
pair <- which(unique_pairs_df$initiator==i&unique_pairs_df$recipient==j)
param_mean <- list(lambda0=mean(sim_mmpp_sep$lambda0[,pair]),
c=mean(sim_mmpp_sep$c[,pair]),
q1=mean(sim_mmpp_sep$q1[,pair]),
q2=mean(sim_mmpp_sep$q2[,pair]))
current_window_vec <- unique_pairs_df$observe[[pair]]
current_count_win <- unique_pairs_df$no.events[[pair]]
all_Lambda <- numeric(0)
## add non observation period
for(cur in c(1:length(current_window_vec))){ ## check length > 2
cur_win <- current_window_vec[cur]
current_event_time <- return_df[return_df$initiator==i&
return_df$recipient==j&
return_df$observe.id==cur_win,"event.times"][[1]]
current_obs_time <- return_df[return_df$initiator==i&
return_df$recipient==j&
return_df$observe.id==cur_win,"observe.time"]
time_segment <- seq(0,current_obs_time,length.out=no_segments)
latent_mean <- apply(interpolation_array_list[[pair]][[cur_win]],1,mean)
lambda_mix_vec <- mmppIntensityNumeric(params=param_mean,
latent.vec=latent_mean)
Lambda_vec <- rep(0,length(current_event_time)+1)
temp_time_vec <- c(0,current_event_time,current_obs_time)
for(m in 1:(length(current_event_time)+1)){
interevent_idx <- (time_segment>=temp_time_vec[m]) & (time_segment<temp_time_vec[m+1])
Lambda_vec[m] <- sum(lambda_mix_vec[interevent_idx])*(time_segment[2]-time_segment[1])
}
all_Lambda <- c(all_Lambda,Lambda_vec)
}
# if(length(current_window_vec)<max(unique_observe_win$observe.id)){
#   non_observe_wins <- unique_observe_win$observe.time[!c(1:max(unique_observe_win$observe.id))%in%current_window_vec]
#   all_Lambda <- c(all_Lambda,(param_mean$lambda0*(1+param_mean$c))*non_observe_wins)
# }
KS.result.stat.mmpp[l] <-ks.test(all_Lambda,"pexp")$statistic
}
## hawkes
load(paste(data_path,cohort_names[current_cohort],
"/hawkes_stan_result_",cohort_names[current_cohort],
".RData",sep=''))
KS.result.stat.hawkes <- rep(NA,nrow(unique_pairs_df))
for(l in 1:nrow(unique_pairs_df)){
i <- unique_pairs_df$initiator[l]
j <- unique_pairs_df$recipient[l]
pair <- which(unique_pairs_df$initiator==i&unique_pairs_df$recipient==j)
param_mean <- list(lambda0=mean(sim_hawkes$lambda1[,pair]),
alpha=mean(sim_hawkes$alpha[,pair]),
beta=mean(sim_hawkes$beta[,pair]))
current_window_vec <- unique_pairs_df$observe[[pair]]
all_Lambda <- numeric(0)
## add non observation period
for(cur in c(1:length(current_window_vec))){ ## check length > 2
cur_win <- current_window_vec[cur]
current_event_time <- return_df[return_df$initiator==i&
return_df$recipient==j&
return_df$observe.id==cur_win,"event.times"][[1]]
current_obs_time <- return_df[return_df$initiator==i&
return_df$recipient==j&
return_df$observe.id==cur_win,"observe.time"]
Lambda_vec <- uniHawkesCompensator(lambda0=param_mean$lambda0,alpha=param_mean$alpha,beta=param_mean$beta,
c(0,current_event_time,current_obs_time))
all_Lambda <- c(all_Lambda,Lambda_vec)
}
if(length(current_window_vec)<max(unique_observe_win$observe.id)){
non_observe_wins <- unique_observe_win$observe.time[!c(1:max(unique_observe_win$observe.id))%in%current_window_vec]
all_Lambda <- c(all_Lambda,(param_mean$lambda0)*non_observe_wins)
}
KS.result.stat.hawkes[l] <-ks.test(all_Lambda,"pexp")$statistic
}
##KS statistics for poisson process
KS.result.stat.pp <- rep(1,nrow(unique_pairs_df))
## KS quantiles
## Ref: http://www.real-statistics.com/statistics-tables/kolmogorov-smirnov-table/
ks_quantile_x <- c(1:20,seq(25,50,5),seq(55,145,5))
ks_quantile_y <- c(0.975,0.842,0.708,0.624,0.565,0.521,0.486,0.457,0.432,0.410,0.391,0.375,0.361,0.349,0.338,
0.328,0.318,0.309,0.301,0.294,0.270,0.240,0.230,0.210,0.2,0.19,1.36/sqrt(seq(55,145,5)))
save(x.ks, KS.result.stat.mmhp, KS.result.stat.mmhpsd, KS.result.stat.mmpp,
KS.result.stat.hawkes, KS.result.stat.pp, ks_quantile_x, ks_quantile_y,
file = "../output/ks_all_models.RData")
#load("../output/ks_all_models.RData")
png(paste(plot_path,"real_compare_ks.png",sep=""), height=600, width=600)
par(mfrow=c(1,1),tcl=0.2,mgp=c(3,0,0),
mar=c(5,5,2.6,0.8), oma=c(0,0,0,0))
plot(0,0,xlim=c(6,max(x.ks)),ylim=c(0,1),xlab="Number of events",ylab="KS statistics",cex.lab=2.2,type="n",xaxt="n",yaxt="n")
title("(d)",line=0.7,cex.main=2)
mgp.axis(1,mgp=c(0,0.6,0),at=seq(0,100,20),cex.axis=2,lwd=0,lwd.ticks=1)
mgp.axis(2,mgp=c(0,0.1,0),at=seq(0,0.6,0.1),cex.axis=2,lwd=0,lwd.ticks=1)
ks.line.mmhp <- loess(KS.result.stat.mmhp~x.ks)
ks.line.mmhpsd <- loess(KS.result.stat.mmhpsd~x.ks)
ks.line.mmpp <- loess(KS.result.stat.mmpp~x.ks)
ks.line.hawkes <- loess(KS.result.stat.hawkes~x.ks)
ks.line.quantile <- loess(ks_quantile_y~ks_quantile_x,span=2)
new.ks <- data.frame(x.ks = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks.q <- data.frame(ks_quantile_x = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks$mmhp.pred <- predict(ks.line.mmhp, newdata=new.ks)
new.ks$mmhpsd.pred <- predict(ks.line.mmhpsd, newdata=new.ks)
new.ks$mmpp.pred <- predict(ks.line.mmpp, newdata=new.ks)
new.ks$hawkes.pred <- predict(ks.line.hawkes, newdata=new.ks)
new.ks$quantile <- predict(ks.line.quantile, newdata=new.ks.q)
with(new.ks,lines(x=x.ks,y=mmhp.pred,col="#FC4E07",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmhpsd.pred,col="darkviolet",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmpp.pred,col="#00AFBB",lwd=4))
with(new.ks,lines(x=x.ks,y=hawkes.pred,col="#E7B800",lwd=4))
abline(h=unique(KS.result.stat.pp),col="#2d8d39",lwd=4)
with(new.ks,lines(x=x.ks,y=quantile,col="grey",lwd=4))
legend(60,0.9,c("MMHP","MMHPSD","MMPP","Hawkes","Poisson process","Critical value"),lty=1,lwd=5,
col=c("#FC4E07","darkviolet","#00AFBB","#E7B800","#2d8d39","grey"),bty="n",cex=2.2)
dev.off()
#load("../output/ks_all_models.RData")
png(paste(plot_path,"real_compare_ks.png",sep=""), height=600, width=600)
par(mfrow=c(1,1),tcl=0.2,mgp=c(3,0,0),
mar=c(5,5,2.6,0.8), oma=c(0,0,0,0))
plot(0,0,xlim=c(6,max(x.ks)),ylim=c(0,1),xlab="Number of events",ylab="KS statistics",cex.lab=2.2,type="n",xaxt="n",yaxt="n")
title("(d)",line=0.7,cex.main=2)
mgp.axis(1,mgp=c(0,0.6,0),at=seq(0,100,20),cex.axis=2,lwd=0,lwd.ticks=1)
mgp.axis(2,mgp=c(0,0.1,0),at=seq(0,0.6,0.1),cex.axis=2,lwd=0,lwd.ticks=1)
ks.line.mmhp <- loess(KS.result.stat.mmhp~x.ks)
ks.line.mmhpsd <- loess(KS.result.stat.mmhpsd~x.ks)
ks.line.mmpp <- loess(KS.result.stat.mmpp~x.ks)
ks.line.hawkes <- loess(KS.result.stat.hawkes~x.ks)
ks.line.quantile <- loess(ks_quantile_y~ks_quantile_x,span=2)
new.ks <- data.frame(x.ks = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks.q <- data.frame(ks_quantile_x = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks$mmhp.pred <- predict(ks.line.mmhp, newdata=new.ks)
new.ks$mmhpsd.pred <- predict(ks.line.mmhpsd, newdata=new.ks)
new.ks$mmpp.pred <- predict(ks.line.mmpp, newdata=new.ks)
new.ks$hawkes.pred <- predict(ks.line.hawkes, newdata=new.ks)
new.ks$quantile <- predict(ks.line.quantile, newdata=new.ks.q)
with(new.ks,lines(x=x.ks,y=mmhp.pred,col="#FC4E07",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmhpsd.pred,col="darkviolet",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmpp.pred,col="#00AFBB",lwd=4))
with(new.ks,lines(x=x.ks,y=hawkes.pred,col="#E7B800",lwd=4))
abline(h=unique(KS.result.stat.pp),col="#2d8d39",lwd=4)
with(new.ks,lines(x=x.ks,y=quantile,col="grey",lwd=4))
legend(55,1,c("MMHP","MMHPSD","MMPP","Hawkes","Poisson process","Critical value"),lty=1,lwd=5,
col=c("#FC4E07","darkviolet","#00AFBB","#E7B800","#2d8d39","grey"),bty="n",cex=2.2)
dev.off()
#load("../output/ks_all_models.RData")
png(paste(plot_path,"real_compare_ks.png",sep=""), height=600, width=600)
par(mfrow=c(1,1),tcl=0.2,mgp=c(3,0,0),
mar=c(5,5,2.6,0.8), oma=c(0,0,0,0))
plot(0,0,xlim=c(6,max(x.ks)),ylim=c(0,1),xlab="Number of events",ylab="KS statistics",cex.lab=2.2,type="n",xaxt="n",yaxt="n")
title("(d)",line=0.7,cex.main=2)
mgp.axis(1,mgp=c(0,0.6,0),at=seq(0,100,20),cex.axis=2,lwd=0,lwd.ticks=1)
mgp.axis(2,mgp=c(0,0.1,0),at=seq(0,0.9,0.1),cex.axis=2,lwd=0,lwd.ticks=1)
ks.line.mmhp <- loess(KS.result.stat.mmhp~x.ks)
ks.line.mmhpsd <- loess(KS.result.stat.mmhpsd~x.ks)
ks.line.mmpp <- loess(KS.result.stat.mmpp~x.ks)
ks.line.hawkes <- loess(KS.result.stat.hawkes~x.ks)
ks.line.quantile <- loess(ks_quantile_y~ks_quantile_x,span=2)
new.ks <- data.frame(x.ks = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks.q <- data.frame(ks_quantile_x = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks$mmhp.pred <- predict(ks.line.mmhp, newdata=new.ks)
new.ks$mmhpsd.pred <- predict(ks.line.mmhpsd, newdata=new.ks)
new.ks$mmpp.pred <- predict(ks.line.mmpp, newdata=new.ks)
new.ks$hawkes.pred <- predict(ks.line.hawkes, newdata=new.ks)
new.ks$quantile <- predict(ks.line.quantile, newdata=new.ks.q)
with(new.ks,lines(x=x.ks,y=mmhp.pred,col="#FC4E07",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmhpsd.pred,col="darkviolet",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmpp.pred,col="#00AFBB",lwd=4))
with(new.ks,lines(x=x.ks,y=hawkes.pred,col="#E7B800",lwd=4))
abline(h=unique(KS.result.stat.pp),col="#2d8d39",lwd=4)
with(new.ks,lines(x=x.ks,y=quantile,col="grey",lwd=4))
legend(55,1,c("MMHP","MMHPSD","MMPP","Hawkes","Poisson process","Critical value"),lty=1,lwd=5,
col=c("#FC4E07","darkviolet","#00AFBB","#E7B800","#2d8d39","grey"),bty="n",cex=2.2)
dev.off()
#load("../output/ks_all_models.RData")
png(paste(plot_path,"real_compare_ks.png",sep=""), height=600, width=600)
par(mfrow=c(1,1),tcl=0.2,mgp=c(3,0,0),
mar=c(5,5,2.6,0.8), oma=c(0,0,0,0))
plot(0,0,xlim=c(6,max(x.ks)),ylim=c(0,1),xlab="Number of events",ylab="KS statistics",cex.lab=2.2,type="n",xaxt="n",yaxt="n")
title("(d)",line=0.7,cex.main=2)
mgp.axis(1,mgp=c(0,0.6,0),at=seq(0,100,20),cex.axis=2,lwd=0,lwd.ticks=1)
mgp.axis(2,mgp=c(0,0.1,0),at=seq(0,1,0.1),cex.axis=2,lwd=0,lwd.ticks=1)
ks.line.mmhp <- loess(KS.result.stat.mmhp~x.ks)
ks.line.mmhpsd <- loess(KS.result.stat.mmhpsd~x.ks)
ks.line.mmpp <- loess(KS.result.stat.mmpp~x.ks)
ks.line.hawkes <- loess(KS.result.stat.hawkes~x.ks)
ks.line.quantile <- loess(ks_quantile_y~ks_quantile_x,span=2)
new.ks <- data.frame(x.ks = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks.q <- data.frame(ks_quantile_x = seq(min(x.ks), max(x.ks), length.out = 50))
new.ks$mmhp.pred <- predict(ks.line.mmhp, newdata=new.ks)
new.ks$mmhpsd.pred <- predict(ks.line.mmhpsd, newdata=new.ks)
new.ks$mmpp.pred <- predict(ks.line.mmpp, newdata=new.ks)
new.ks$hawkes.pred <- predict(ks.line.hawkes, newdata=new.ks)
new.ks$quantile <- predict(ks.line.quantile, newdata=new.ks.q)
with(new.ks,lines(x=x.ks,y=mmhp.pred,col="#FC4E07",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmhpsd.pred,col="darkviolet",lwd=4.5))
with(new.ks,lines(x=x.ks,y=mmpp.pred,col="#00AFBB",lwd=4))
with(new.ks,lines(x=x.ks,y=hawkes.pred,col="#E7B800",lwd=4))
abline(h=unique(KS.result.stat.pp),col="#2d8d39",lwd=4)
with(new.ks,lines(x=x.ks,y=quantile,col="grey",lwd=4))
legend(55,1,c("MMHP","MMHPSD","MMPP","Hawkes","Poisson process","Critical value"),lty=1,lwd=5,
col=c("#FC4E07","darkviolet","#00AFBB","#E7B800","#2d8d39","grey"),bty="n",cex=2.2)
dev.off()
